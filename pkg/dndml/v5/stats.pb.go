// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.1
// source: dndml/v5/stats.proto

package v5

import (
	dndml "github.com/theaufish-git/dndml/pkg/dndml"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Health struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   uint32      `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Maximum   uint32      `protobuf:"varint,2,opt,name=maximum,proto3" json:"maximum,omitempty"`
	Temporary uint32      `protobuf:"varint,3,opt,name=temporary,proto3" json:"temporary,omitempty"`
	Average   *dndml.Roll `protobuf:"bytes,4,opt,name=average,proto3" json:"average,omitempty"`
}

func (x *Health) Reset() {
	*x = Health{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dndml_v5_stats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Health) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Health) ProtoMessage() {}

func (x *Health) ProtoReflect() protoreflect.Message {
	mi := &file_dndml_v5_stats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Health.ProtoReflect.Descriptor instead.
func (*Health) Descriptor() ([]byte, []int) {
	return file_dndml_v5_stats_proto_rawDescGZIP(), []int{0}
}

func (x *Health) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *Health) GetMaximum() uint32 {
	if x != nil {
		return x.Maximum
	}
	return 0
}

func (x *Health) GetTemporary() uint32 {
	if x != nil {
		return x.Temporary
	}
	return 0
}

func (x *Health) GetAverage() *dndml.Roll {
	if x != nil {
		return x.Average
	}
	return nil
}

type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat      int32           `protobuf:"varint,1,opt,name=stat,proto3" json:"stat,omitempty"`
	Modifiers []*StatModifier `protobuf:"bytes,2,rep,name=modifiers,proto3" json:"modifiers,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dndml_v5_stats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_dndml_v5_stats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_dndml_v5_stats_proto_rawDescGZIP(), []int{1}
}

func (x *Stat) GetStat() int32 {
	if x != nil {
		return x.Stat
	}
	return 0
}

func (x *Stat) GetModifiers() []*StatModifier {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

type StatModifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc  string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	Bonus int32  `protobuf:"varint,2,opt,name=bonus,proto3" json:"bonus,omitempty"`
}

func (x *StatModifier) Reset() {
	*x = StatModifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dndml_v5_stats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatModifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatModifier) ProtoMessage() {}

func (x *StatModifier) ProtoReflect() protoreflect.Message {
	mi := &file_dndml_v5_stats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatModifier.ProtoReflect.Descriptor instead.
func (*StatModifier) Descriptor() ([]byte, []int) {
	return file_dndml_v5_stats_proto_rawDescGZIP(), []int{2}
}

func (x *StatModifier) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *StatModifier) GetBonus() int32 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str *Stat `protobuf:"bytes,2,opt,name=str,proto3" json:"str,omitempty"`
	Dex *Stat `protobuf:"bytes,3,opt,name=dex,proto3" json:"dex,omitempty"`
	Con *Stat `protobuf:"bytes,4,opt,name=con,proto3" json:"con,omitempty"`
	Int *Stat `protobuf:"bytes,5,opt,name=int,proto3" json:"int,omitempty"`
	Wis *Stat `protobuf:"bytes,6,opt,name=wis,proto3" json:"wis,omitempty"`
	Cha *Stat `protobuf:"bytes,7,opt,name=cha,proto3" json:"cha,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dndml_v5_stats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_dndml_v5_stats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_dndml_v5_stats_proto_rawDescGZIP(), []int{3}
}

func (x *Stats) GetStr() *Stat {
	if x != nil {
		return x.Str
	}
	return nil
}

func (x *Stats) GetDex() *Stat {
	if x != nil {
		return x.Dex
	}
	return nil
}

func (x *Stats) GetCon() *Stat {
	if x != nil {
		return x.Con
	}
	return nil
}

func (x *Stats) GetInt() *Stat {
	if x != nil {
		return x.Int
	}
	return nil
}

func (x *Stats) GetWis() *Stat {
	if x != nil {
		return x.Wis
	}
	return nil
}

func (x *Stats) GetCha() *Stat {
	if x != nil {
		return x.Cha
	}
	return nil
}

type SpellSlots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc  string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	Lvl_1 int32  `protobuf:"varint,2,opt,name=lvl_1,json=lvl1,proto3" json:"lvl_1,omitempty"`
	Lvl_2 int32  `protobuf:"varint,3,opt,name=lvl_2,json=lvl2,proto3" json:"lvl_2,omitempty"`
	Lvl_3 int32  `protobuf:"varint,4,opt,name=lvl_3,json=lvl3,proto3" json:"lvl_3,omitempty"`
	Lvl_4 int32  `protobuf:"varint,5,opt,name=lvl_4,json=lvl4,proto3" json:"lvl_4,omitempty"`
	Lvl_5 int32  `protobuf:"varint,6,opt,name=lvl_5,json=lvl5,proto3" json:"lvl_5,omitempty"`
	Lvl_6 int32  `protobuf:"varint,7,opt,name=lvl_6,json=lvl6,proto3" json:"lvl_6,omitempty"`
	Lvl_7 int32  `protobuf:"varint,8,opt,name=lvl_7,json=lvl7,proto3" json:"lvl_7,omitempty"`
	Lvl_8 int32  `protobuf:"varint,9,opt,name=lvl_8,json=lvl8,proto3" json:"lvl_8,omitempty"`
	Lvl_9 int32  `protobuf:"varint,10,opt,name=lvl_9,json=lvl9,proto3" json:"lvl_9,omitempty"`
}

func (x *SpellSlots) Reset() {
	*x = SpellSlots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dndml_v5_stats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpellSlots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellSlots) ProtoMessage() {}

func (x *SpellSlots) ProtoReflect() protoreflect.Message {
	mi := &file_dndml_v5_stats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellSlots.ProtoReflect.Descriptor instead.
func (*SpellSlots) Descriptor() ([]byte, []int) {
	return file_dndml_v5_stats_proto_rawDescGZIP(), []int{4}
}

func (x *SpellSlots) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SpellSlots) GetLvl_1() int32 {
	if x != nil {
		return x.Lvl_1
	}
	return 0
}

func (x *SpellSlots) GetLvl_2() int32 {
	if x != nil {
		return x.Lvl_2
	}
	return 0
}

func (x *SpellSlots) GetLvl_3() int32 {
	if x != nil {
		return x.Lvl_3
	}
	return 0
}

func (x *SpellSlots) GetLvl_4() int32 {
	if x != nil {
		return x.Lvl_4
	}
	return 0
}

func (x *SpellSlots) GetLvl_5() int32 {
	if x != nil {
		return x.Lvl_5
	}
	return 0
}

func (x *SpellSlots) GetLvl_6() int32 {
	if x != nil {
		return x.Lvl_6
	}
	return 0
}

func (x *SpellSlots) GetLvl_7() int32 {
	if x != nil {
		return x.Lvl_7
	}
	return 0
}

func (x *SpellSlots) GetLvl_8() int32 {
	if x != nil {
		return x.Lvl_8
	}
	return 0
}

func (x *SpellSlots) GetLvl_9() int32 {
	if x != nil {
		return x.Lvl_9
	}
	return 0
}

var File_dndml_v5_stats_proto protoreflect.FileDescriptor

var file_dndml_v5_stats_proto_rawDesc = []byte{
	0x0a, 0x14, 0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2f, 0x76, 0x35, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2e, 0x76, 0x35,
	0x1a, 0x10, 0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2f, 0x72, 0x6f, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x12,
	0x25, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x52, 0x07, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x22, 0x50, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2e, 0x76, 0x35,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x09, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x6f, 0x6e,
	0x75, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x03,
	0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6e, 0x64, 0x6d,
	0x6c, 0x2e, 0x76, 0x35, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x20,
	0x0a, 0x03, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6e,
	0x64, 0x6d, 0x6c, 0x2e, 0x76, 0x35, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x03, 0x64, 0x65, 0x78,
	0x12, 0x20, 0x0a, 0x03, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2e, 0x76, 0x35, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x03, 0x63,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2e, 0x76, 0x35, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x03, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x77, 0x69, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2e, 0x76, 0x35, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x03, 0x77, 0x69, 0x73, 0x12, 0x20, 0x0a, 0x03, 0x63, 0x68, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2e, 0x76, 0x35, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x03, 0x63, 0x68, 0x61, 0x22, 0xdd, 0x01, 0x0a, 0x0a, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x13, 0x0a, 0x05, 0x6c,
	0x76, 0x6c, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x76, 0x6c, 0x31,
	0x12, 0x13, 0x0a, 0x05, 0x6c, 0x76, 0x6c, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x6c, 0x76, 0x6c, 0x32, 0x12, 0x13, 0x0a, 0x05, 0x6c, 0x76, 0x6c, 0x5f, 0x33, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x76, 0x6c, 0x33, 0x12, 0x13, 0x0a, 0x05, 0x6c, 0x76,
	0x6c, 0x5f, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x76, 0x6c, 0x34, 0x12,
	0x13, 0x0a, 0x05, 0x6c, 0x76, 0x6c, 0x5f, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6c, 0x76, 0x6c, 0x35, 0x12, 0x13, 0x0a, 0x05, 0x6c, 0x76, 0x6c, 0x5f, 0x36, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x76, 0x6c, 0x36, 0x12, 0x13, 0x0a, 0x05, 0x6c, 0x76, 0x6c,
	0x5f, 0x37, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x76, 0x6c, 0x37, 0x12, 0x13,
	0x0a, 0x05, 0x6c, 0x76, 0x6c, 0x5f, 0x38, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c,
	0x76, 0x6c, 0x38, 0x12, 0x13, 0x0a, 0x05, 0x6c, 0x76, 0x6c, 0x5f, 0x39, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6c, 0x76, 0x6c, 0x39, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x61, 0x75, 0x66, 0x69, 0x73, 0x68,
	0x2d, 0x67, 0x69, 0x74, 0x2f, 0x64, 0x6e, 0x64, 0x6d, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64,
	0x6e, 0x64, 0x6d, 0x6c, 0x2f, 0x76, 0x35, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dndml_v5_stats_proto_rawDescOnce sync.Once
	file_dndml_v5_stats_proto_rawDescData = file_dndml_v5_stats_proto_rawDesc
)

func file_dndml_v5_stats_proto_rawDescGZIP() []byte {
	file_dndml_v5_stats_proto_rawDescOnce.Do(func() {
		file_dndml_v5_stats_proto_rawDescData = protoimpl.X.CompressGZIP(file_dndml_v5_stats_proto_rawDescData)
	})
	return file_dndml_v5_stats_proto_rawDescData
}

var file_dndml_v5_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_dndml_v5_stats_proto_goTypes = []interface{}{
	(*Health)(nil),       // 0: dndml.v5.Health
	(*Stat)(nil),         // 1: dndml.v5.Stat
	(*StatModifier)(nil), // 2: dndml.v5.StatModifier
	(*Stats)(nil),        // 3: dndml.v5.Stats
	(*SpellSlots)(nil),   // 4: dndml.v5.SpellSlots
	(*dndml.Roll)(nil),   // 5: dndml.Roll
}
var file_dndml_v5_stats_proto_depIdxs = []int32{
	5, // 0: dndml.v5.Health.average:type_name -> dndml.Roll
	2, // 1: dndml.v5.Stat.modifiers:type_name -> dndml.v5.StatModifier
	1, // 2: dndml.v5.Stats.str:type_name -> dndml.v5.Stat
	1, // 3: dndml.v5.Stats.dex:type_name -> dndml.v5.Stat
	1, // 4: dndml.v5.Stats.con:type_name -> dndml.v5.Stat
	1, // 5: dndml.v5.Stats.int:type_name -> dndml.v5.Stat
	1, // 6: dndml.v5.Stats.wis:type_name -> dndml.v5.Stat
	1, // 7: dndml.v5.Stats.cha:type_name -> dndml.v5.Stat
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_dndml_v5_stats_proto_init() }
func file_dndml_v5_stats_proto_init() {
	if File_dndml_v5_stats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dndml_v5_stats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Health); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dndml_v5_stats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dndml_v5_stats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatModifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dndml_v5_stats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dndml_v5_stats_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpellSlots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dndml_v5_stats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dndml_v5_stats_proto_goTypes,
		DependencyIndexes: file_dndml_v5_stats_proto_depIdxs,
		MessageInfos:      file_dndml_v5_stats_proto_msgTypes,
	}.Build()
	File_dndml_v5_stats_proto = out.File
	file_dndml_v5_stats_proto_rawDesc = nil
	file_dndml_v5_stats_proto_goTypes = nil
	file_dndml_v5_stats_proto_depIdxs = nil
}
